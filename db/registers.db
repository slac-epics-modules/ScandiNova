record (longin,"$(P)$(R)ModbusProtocolID") {
	field(DESC, "ModbusTCP protocol ID number")
	field(HIHI, "27")
	field(HHSV, "MAJOR")
	field(LOLO, "25")
	field(LLSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read0 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)ModbusProtocolRevision") {
	field(DESC, "ModbusTCP protocol revision number")
	field(HIHI, "2")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)State") {
	field(DESC, "Current state of modulator")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bi,"$(P)$(R)StandByStateIntlk") {
	field(DESC, "Interlock exists in the StandBy state")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HVStateIntlk") {
	field(DESC, "Interlock exists in the HV state")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)TrigStateIntlk") {
	field(DESC, "Interlock exists in the trigger state")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x04 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)WarningExists") {
	field(DESC, "Warning bit is high on a modulator state")
	field(ZNAM, "OK")
	field(ONAM, "WARNING")
	field(ZSV, "NO_ALARM")
	field(OSV, "MINOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x08 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OutsideLimitsIntlk") {
	field(DESC, "Outside limits")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x10 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ErrorExists") {
	field(DESC, "Error exists")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV, "NO_ALARM")
	field(OSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read4 0 0x20 500)")
	field(DTYP, "asynUInt32Digital")
}
record (mbbi,"$(P)$(R)AccessLevel") {
	field(DESC, "Access level of modulator. Remote/local")
	field(ZRSV, "NO_ALARM")
	field(ONSV, "MINOR")
	field(TWSV, "MINOR")
	field(THSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read5 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "Remote")
	field(ONVL, "1")
	field(ONST, "Operator")
	field(TWVL, "2")
	field(TWST, "Admin")
	field(THVL, "3")
	field(THST, "ScandiNova")
}
record (ai,"$(P)$(R)FilamentWarmupTimeLeft") {
	field(DESC, "Remaining time on filament warm up timer")
	field(EGU, "s")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read6 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)PulseRepetitionFreq") {
	field(DESC, "Pulse repetition frequency read value")
	field(EGU, "Hz")
	field(HIHI, "10.5")
	field(HHSV, "MAJOR")
	field(HIGH, "10.1")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read8 0)")
	field(DTYP, "asynFloat64")
}
record (mbbi,"$(P)$(R)StateSet:RBV") {
	field(DESC, "Readback of target modulator state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read20 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (ai,"$(P)$(R)VoltageSet:RBV") {
	field(DESC, "Readback of voltage setvalue of all ccps")
	field(EGU, "V")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read21 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)FilamentCurrentSet:RBV") {
	field(DESC, "Set val for filament current")
	field(EGU, "A")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read23 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)PulseWidthSet:RBV") {
	field(DESC, "Readback of pulse width setvalue")
	field(EGU, "us")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read25 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)PulseRepFreqSet:RBV") {
	field(DESC, "Readback of pulse repetition freq setval")
	field(EGU, "Hz")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read27 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS1CurrentSet:RBV") {
	field(DESC, "Current set for solenoid power supply 1")
	field(EGU, "A")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read29 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS2CurrentSet:RBV") {
	field(DESC, "Current set for solenoid power supply 2")
	field(EGU, "A")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read31 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS3CurrentSet:RBV") {
	field(DESC, "Current set for solenoid power supply 3")
	field(EGU, "A")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read33 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)Voltage") {
	field(DESC, "Capacitor charging power supply voltage")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read100 0)")
	field(DTYP, "asynFloat64")
}
record (bi,"$(P)$(R)CCPSMainIntlk") {
	field(DESC, "Capacitor charging ps main intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSPwnPulseCountIntlk") {
	field(DESC, "Capacitor charging ps pwn pulse intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSIsaqComIntlk") {
	field(DESC, "CCPS isolated acquisition board intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x04 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSSoftStartIntlk") {
	field(DESC, "Capacitor charging ps soft start intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x08 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSIgbtIntlk") {
	field(DESC, "Capacitor charging ps igbt intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x10 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSPhaseLossIntlk") {
	field(DESC, "Capacitor charging ps phase loss intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x20 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSTransformTempIntlk") {
	field(DESC, "CCPS transformer temp intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x40 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSRectifierTempIntlk") {
	field(DESC, "CCPS rectifier temp intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x80 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSIgbtTempIntlk") {
	field(DESC, "Capacitor charging ps igbt temp intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x100 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSOverVoltageIntlk") {
	field(DESC, "Capacitor charging ps over voltage intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x200 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSOverCurrentIntlk") {
	field(DESC, "Capacitor charging ps over current intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x400 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CCPSFiberTimeoutIntlk") {
	field(DESC, "CCPS opto fiber dark timeout intlk")
	field(ZNAM, "FAULT")
	field(ONAM, "OK")
	field(ZSV, "MAJOR")
	field(OSV, "NO_ALARM")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read120 0 0x800 500)")
	field(DTYP, "asynUInt32Digital")
}
record (ai,"$(P)$(R)FilamentCurrent") {
	field(DESC, "Filament power supply current")
	field(EGU, "A")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "27.5")
	field(HSV, "MINOR")
	field(LOW, "22.5")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read200 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)FilamentVoltage") {
	field(DESC, "Filament power supply voltage")
	field(EGU, "V")
	field(HIHI, "32")
	field(HHSV, "MAJOR")
	field(HIGH, "30")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read202 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)IonPumpCurrent") {
	field(DESC, "Ion pump controller 1 current")
	field(EGU, "nA")
	field(HIHI, "100")
	field(HHSV, "MAJOR")
	field(HIGH, "10")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read300 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)IonPumpVoltage") {
	field(DESC, "Ion pump controller 1 voltage")
	field(EGU, "kV")
	field(HIHI, "5.5")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "5")
	field(HSV, "MINOR")
	field(LOW, "4")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read302 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS1Current") {
	field(DESC, "Solenoid power supply 1 current")
	field(EGU, "A")
	field(HIHI, "41.5")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "41")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read400 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS1Voltage") {
	field(DESC, "Solenoid power supply 1 voltage")
	field(EGU, "V")
	field(HIHI, "60.7")
	field(HHSV, "MAJOR")
	field(LOLO, "50")
	field(LLSV, "MAJOR")
	field(HIGH, "60")
	field(HSV, "MINOR")
	field(LOW, "53.5")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read402 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS2Current") {
	field(DESC, "Solenoid power supply 2 current")
	field(EGU, "A")
	field(HIHI, "24")
	field(HHSV, "MAJOR")
	field(LOLO, "20")
	field(LLSV, "MAJOR")
	field(HIGH, "23")
	field(HSV, "MINOR")
	field(LOW, "21")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read404 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS2Voltage") {
	field(DESC, "Solenoid power supply 2 voltage")
	field(EGU, "V")
	field(HIHI, "33.7")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "33")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read406 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS3Current") {
	field(DESC, "Solenoid power supply 3 current")
	field(EGU, "A")
	field(HIHI, "36")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "35")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read408 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidPS3Voltage") {
	field(DESC, "Solenoid power supply 3 voltage")
	field(EGU, "V")
	field(HIHI, "49.1")
	field(HHSV, "MAJOR")
	field(LOLO, "43")
	field(LLSV, "MAJOR")
	field(HIGH, "48")
	field(HSV, "MINOR")
	field(LOW, "44")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read410 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CurrentTransformer") {
	field(DESC, "Pulse current amplitude")
	field(EGU, "A")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "250")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read500 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CapVoltageDivider") {
	field(DESC, "Pulse voltage amplitude")
	field(EGU, "kV")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "240")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read502 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)PulseWidth") {
	field(DESC, "Pulse width at 50% height current pulse")
	field(EGU, "us")
	field(HIHI, "4.7")
	field(HHSV, "MAJOR")
	field(HIGH, "4.5")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read504 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)OilTemp") {
	field(DESC, "Oil temperature")
	field(EGU, "C")
	field(HIHI, "56")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "53")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read600 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)OilLevel") {
	field(DESC, "Oil level")
	field(EGU, "mm")
	field(HIHI, "-5")
	field(HHSV, "MAJOR")
	field(LOLO, "-40")
	field(LLSV, "MAJOR")
	field(HIGH, "-10")
	field(HSV, "MINOR")
	field(LOW, "-25")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read602 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)InletWaterTemp") {
	field(DESC, "Inlet water temperature")
	field(EGU, "C")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read700 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CollectorReturnTemp") {
	field(DESC, "Collector return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read702 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)BodyReturnTemp") {
	field(DESC, "Body return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read704 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)RFDrivePower") {
	field(DESC, "RF drive power")
	field(EGU, "W")
	field(HIHI, "520")
	field(HHSV, "MAJOR")
	field(HIGH, "500")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read800 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)RFForwardPower") {
	field(DESC, "RF foward power")
	field(EGU, "dBm")
	field(HIHI, "103")
	field(HHSV, "MAJOR")
	field(HIGH, "102")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read820 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)RFReturnLoss") {
	field(DESC, "RF reflected power")
	field(EGU, "dBm")
	field(HIHI, "70")
	field(HHSV, "MAJOR")
	field(HIGH, "60")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read822 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)RFVSWR") {
	field(DESC, "RF voltage standing wave ratio")
	field(HIHI, "10")
	field(HHSV, "MAJOR")
	field(HIGH, "5")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read824 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)RFPulseLength") {
	field(DESC, "RF pulse length")
	field(EGU, "us")
	field(HIHI, "4.7")
	field(HHSV, "MAJOR")
	field(HIGH, "4.5")
	field(HSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read826 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CCPSWaterFlow1") {
	field(DESC, "Capacitor charging ps water flow 1")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read900 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CCPSWaterFlow2") {
	field(DESC, "Capacitor charging ps water flow 2")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read902 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CCPSWaterFlow3") {
	field(DESC, "Capacitor charging ps water flow 3")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read904 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)BodyWindowFlow") {
	field(DESC, "Body window water flow")
	field(EGU, "l/m")
	field(HIHI, "4.5")
	field(HHSV, "MAJOR")
	field(LOLO, "3.4")
	field(LLSV, "MAJOR")
	field(HIGH, "4.3")
	field(HSV, "MINOR")
	field(LOW, "3.7")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read908 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)CollectorFlow") {
	field(DESC, "Collector water flow")
	field(EGU, "l/m")
	field(HIHI, "20")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "19")
	field(HSV, "MINOR")
	field(LOW, "17")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read910 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P)$(R)SolenoidFlow") {
	field(DESC, "Solenoid water flow")
	field(EGU, "l/m")
	field(HIHI, "8")
	field(HHSV, "MAJOR")
	field(LOLO, "6.7")
	field(LLSV, "MAJOR")
	field(HIGH, "7.8")
	field(HSV, "MINOR")
	field(LOW, "6.9")
	field(LSV, "MINOR")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read912 0)")
	field(DTYP, "asynFloat64")
}
record (longin,"$(P)$(R)EventIndex") {
	field(DESC, "Modulo 50 of Index to event log arrays")
	info(archive,"policy:3min")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read999 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)EventType0") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType1") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType2") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType3") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType4") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType5") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType6") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType7") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType8") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType9") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType10") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType11") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 11)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType12") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType13") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 13)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType14") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType15") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 15)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType16") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType17") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType18") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 18)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType19") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 19)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType20") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 20)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType21") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 21)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType22") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 22)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType23") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType24") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType25") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType26") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType27") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType28") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType29") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType30") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType31") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType32") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 32)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType33") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType34") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 34)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType35") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType36") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 36)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType37") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 37)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType38") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 38)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType39") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType40") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType41") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 41)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType42") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 42)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType43") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 43)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType44") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 44)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType45") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 45)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType46") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 46)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType47") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 47)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType48") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 48)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (mbbi,"$(P)$(R)EventType49") {
	field(DESC, "Event type uses event state enum")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1050 49)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (longin,"$(P)$(R)EventTime0") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime2") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime4") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime6") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime8") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime10") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime12") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime14") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime16") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime18") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime20") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime22") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime24") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime26") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime28") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime30") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime32") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime34") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime36") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime38") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime40") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime42") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime44") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime46") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime48") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime50") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime52") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime54") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime56") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime58") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime60") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime62") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime64") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime66") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime68") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime70") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime72") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime74") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime76") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime78") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime80") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime82") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime84") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime86") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime88") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime90") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime92") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime94") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime96") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime98") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1100 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime100") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime102") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime104") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime106") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime108") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime110") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime112") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime114") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime116") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime118") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime120") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime122") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime124") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime126") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime128") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime130") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime132") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime134") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime136") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime138") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime140") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime142") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime144") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime146") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime148") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime150") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime152") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime154") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime156") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime158") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime160") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime162") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime164") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime166") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime168") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime170") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime172") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime174") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime176") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime178") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime180") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime182") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime184") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime186") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime188") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime190") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime192") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime194") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime196") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTime198") {
	field(DESC, "Event timestamp 64 bits")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1200 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger0") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger2") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger4") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger6") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger8") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger10") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger12") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger14") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger16") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger18") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger20") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger22") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger24") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger26") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger28") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger30") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger32") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger34") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger36") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger38") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger40") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger42") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger44") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger46") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger48") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger50") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger52") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger54") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger56") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger58") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger60") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger62") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger64") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger66") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger68") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger70") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger72") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger74") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger76") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger78") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger80") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger82") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger84") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger86") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger88") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger90") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger92") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger94") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger96") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTrigger98") {
	field(DESC, "Current trigger id/count")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1300 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem0") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem1") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem2") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem3") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem4") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem5") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem6") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem7") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem8") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem9") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem10") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem11") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem12") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem13") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem14") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem15") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem16") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem17") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem18") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem19") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem20") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem21") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem22") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem23") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem24") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem25") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem26") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem27") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem28") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem29") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem30") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem31") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem32") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem33") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem34") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem35") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem36") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem37") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem38") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem39") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem40") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem41") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem42") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem43") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem44") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem45") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem46") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem47") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem48") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventItem49") {
	field(DESC, "Shows which item generated this event")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1400 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum0") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum1") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum2") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum3") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum4") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum5") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum6") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum7") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum8") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum9") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum10") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum11") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum12") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum13") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum14") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum15") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum16") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum17") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum18") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum19") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum20") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum21") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum22") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum23") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum24") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum25") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum26") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum27") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum28") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum29") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum30") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum31") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum32") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum33") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum34") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum35") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum36") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum37") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum38") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum39") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum40") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum41") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum42") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum43") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum44") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum45") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum46") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum47") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum48") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventTextNum49") {
	field(DESC, "Uses strings enum determines subelement")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1450 49)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)EventDataType0") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType1") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType2") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType3") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType4") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType5") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType6") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType7") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType8") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType9") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType10") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType11") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 11)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType12") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType13") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 13)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType14") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType15") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 15)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType16") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType17") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType18") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 18)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType19") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 19)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType20") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 20)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType21") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 21)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType22") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 22)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType23") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType24") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType25") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType26") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType27") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType28") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType29") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType30") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType31") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType32") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 32)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType33") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType34") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 34)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType35") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType36") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 36)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType37") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 37)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType38") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 38)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType39") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType40") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType41") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 41)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType42") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 42)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType43") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 43)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType44") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 44)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType45") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 45)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType46") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 46)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType47") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 47)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType48") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 48)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (mbbi,"$(P)$(R)EventDataType49") {
	field(DESC, "Event data type")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1500 49)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "No data")
	field(ONVL, "1")
	field(ONST, "Real")
	field(TWVL, "2")
	field(TWST, "Bool")
	field(THVL, "3")
	field(THST, "Int")
	field(FRVL, "4")
	field(FRST, "Uint")
	field(FVVL, "5")
	field(FVST, "Word")
	field(SXVL, "6")
	field(SXST, "Dint")
	field(SVVL, "7")
	field(SVST, "Udint")
	field(EIVL, "8")
	field(EIST, "Dword")
}
record (longin,"$(P)$(R)EventData0") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData2") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData4") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData6") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData8") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData10") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData12") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData14") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData16") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData18") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData20") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData22") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData24") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData26") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData28") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData30") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData32") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData34") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData36") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData38") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData40") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData42") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData44") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData46") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData48") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData50") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData52") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData54") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData56") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData58") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData60") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData62") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData64") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData66") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData68") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData70") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData72") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData74") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData76") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData78") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData80") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData82") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData84") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData86") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData88") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData90") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData92") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData94") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData96") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)EventData98") {
	field(DESC, "Data for event if data type is NoData")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1550 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventIncrement") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1700 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)MainEventType") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1700 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (longin,"$(P)$(R)MainEventTimeUpper") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1702 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventTimeLower") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1702 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventTrigger") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1706 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventItem") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1708 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventTextNum") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1708 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventDataType") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1708 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)MainEventData") {
	field(DESC, "Struct holding main event data")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1711 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkIncrement") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1715 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)LastIntlkType") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1715 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ZRST, "State")
	field(ONVL, "1")
	field(ONST, "Warning")
	field(TWVL, "2")
	field(TWST, "Interlock")
	field(THVL, "3")
	field(THST, "Error")
	field(FRVL, "4")
	field(FRST, "Parameter")
	field(FVVL, "5")
	field(FVST, "Message")
}
record (longin,"$(P)$(R)LastIntlkTimeUpper") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1717 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkTimeLower") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1717 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkTrigger") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1721 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkItem") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1723 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkTextNum") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1723 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkDataType") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1723 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)LastIntlkData") {
	field(DESC, "first interlock event since reset")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read1726 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P)$(R)TrigEnableCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilPumpCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BpsVoltSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)MainsOnCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)VoltSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FpsCurrSet1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps1CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps2CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps3CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FanOnCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 13)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HeaterDelay1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)PlswthSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)LocPrfSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)PrfRead:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FiberIntSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwCtrlExtIntlkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwCtrlTrigEnableSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HvEnaSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)ExternalIntlk1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)ExternalIntlk2:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Spare3:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Spare4:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)TmaxSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ps1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ps1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ps1SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 41)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BleederSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 66)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su1SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 69)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su2SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 70)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su3SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 71)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su4SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 72)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su5SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 73)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su6SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 74)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su7SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 75)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Su8SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 76)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BiasPsOkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 89)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiCtHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 94)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiCtLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 95)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiCvdHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 96)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiCvdLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 97)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiFwhmHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 98)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiFwhmLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 99)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)DigiSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilLevHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilLevLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilFilterSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilPumpInverterSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)OilPumpTempSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FpsCurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FpsCurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FpsVoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 11)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FpsVoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps1CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps1CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 15)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps2CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 18)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps2CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 19)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps2VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 20)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps2VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 21)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps3CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 22)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps3CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps3VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Sps3VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)SolPsSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwHvSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwStbSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ipc1CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ipc1CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ipc1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ipc1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 32)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)Ipc1VacOkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)InletWaterTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 84)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)InletWaterTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 85)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)ColRtnTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 86)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)ColRtnTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 87)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BodyRtnTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 88)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BodyRtnTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 89)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwHvSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 98)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)HwStbSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 99)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)SolTempSwitchSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)FluidTrapSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)CcpsSuFlow1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)CcpsSuFlow2:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)CcpsSuFlow3:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BodWinFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)CollectorFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)SolenoidFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RfaSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)CollectorPower:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)BodyPower:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFFwdHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFFwdLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 34)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFRflHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFRflLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 36)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFPulseLenHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 37)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFPulseLenLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 38)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFDigiSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)RFVSWRHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)GUIWatchdog:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 52)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)IntComm:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 54)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P)$(R)ExtComm:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 55)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bi,"$(P)$(R)TrigEnableCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)TrigEnableCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 2 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 2 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BpsVoltSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 3 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BpsVoltSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 3 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)MainsOnCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)MainsOnCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)VoltSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 5 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)VoltSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 5 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrSet1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 7 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrSet1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 7 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FanOnCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 13 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FanOnCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 13 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HeaterDelay1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 14 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HeaterDelay1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 14 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)PlswthSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 16 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)PlswthSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 16 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)LocPrfSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 17 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)LocPrfSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 17 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)PrfRead:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 23 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)PrfRead:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 23 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FiberIntSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 24 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FiberIntSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 24 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwCtrlExtIntlkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 25 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwCtrlExtIntlkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 25 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwCtrlTrigEnableSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 26 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwCtrlTrigEnableSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 26 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HvEnaSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 27 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HvEnaSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 27 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExternalIntlk1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 28 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExternalIntlk1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 28 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExternalIntlk2:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 29 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExternalIntlk2:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 29 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Spare3:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Spare3:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Spare4:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Spare4:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)TmaxSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 35 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)TmaxSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 35 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 39 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 39 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 40 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 40 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 41 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ps1SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 41 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BleederSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 66 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BleederSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 66 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su1SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 69 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su1SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 69 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su2SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 70 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su2SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 70 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su3SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 71 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su3SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 71 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su4SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 72 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su4SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 72 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su5SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 73 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su5SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 73 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su6SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 74 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su6SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 74 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su7SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 75 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su7SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 75 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su8SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 76 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Su8SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 76 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BiasPsOkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 89 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BiasPsOkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 89 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCtHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 94 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCtHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 94 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCtLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 95 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCtLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 95 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCvdHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 96 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCvdHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 96 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCvdLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 97 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiCvdLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 97 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiFwhmHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 98 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiFwhmHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 98 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiFwhmLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 99 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiFwhmLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 99 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)DigiSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilLevHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilLevHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilLevLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 2 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilLevLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 2 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 3 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 3 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilFilterSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 6 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilFilterSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 6 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpInverterSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 7 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpInverterSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 7 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpTempSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)OilPumpTempSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsCurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsVoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 11 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsVoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 11 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsVoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 12 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FpsVoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 12 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 14 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 14 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 15 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 15 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 16 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 16 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 17 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 17 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 18 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 18 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 19 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 19 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 20 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 20 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 21 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps2VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 21 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 22 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 22 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 23 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 23 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 24 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 24 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 25 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Sps3VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 25 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolPsSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 26 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolPsSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 26 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwHvSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 27 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwHvSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 27 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwStbSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 28 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwStbSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 28 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 29 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 29 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 32 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 32 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VacOkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 33 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)Ipc1VacOkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 33 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)InletWaterTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 84 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)InletWaterTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 84 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)InletWaterTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 85 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)InletWaterTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 85 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ColRtnTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 86 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ColRtnTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 86 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ColRtnTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 87 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ColRtnTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 87 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyRtnTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 88 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyRtnTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 88 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyRtnTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 89 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyRtnTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 89 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwHvSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 98 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwHvSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 98 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwStbSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 99 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)HwStbSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 99 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolTempSwitchSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolTempSwitchSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FluidTrapSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)FluidTrapSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow2:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 5 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow2:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 5 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow3:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 6 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CcpsSuFlow3:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 6 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodWinFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodWinFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CollectorFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CollectorFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolenoidFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)SolenoidFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RfaSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 12 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RfaSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 12 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CollectorPower:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)CollectorPower:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyPower:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)BodyPower:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFFwdHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 33 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFFwdHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 33 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFFwdLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 34 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFFwdLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 34 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFRflHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 35 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFRflHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 35 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFRflLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 36 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFRflLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 36 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFPulseLenHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 37 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFPulseLenHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 37 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFPulseLenLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 38 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFPulseLenLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 38 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFDigiSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 39 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFDigiSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 39 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFVSWRHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 40 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)RFVSWRHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 40 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)GUIWatchdog:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 52 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)GUIWatchdog:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 52 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)IntComm:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 54 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)IntComm:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 54 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExtComm:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 55 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P)$(R)ExtComm:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 55 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (longin,"$(P)$(R)WaveformType") {
	field(DESC, "Waveform type requested, 99 if error")
	field(HIHI, "140")
	field(HHSV, "MAJOR")
	field(LOLO, "99")
	field(LLSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3000 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)WaveformTimeLower") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)WaveformTimeUpper") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)WaveformPulseIDLower") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)WaveformPulseIDUpper") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)WaveformNumSamples") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform0") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform1") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform2") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform3") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform4") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform5") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform6") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform7") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform8") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform9") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform10") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform11") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform12") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform13") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform14") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform15") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform16") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform17") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform18") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform19") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform20") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform21") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform22") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform23") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform24") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform25") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform26") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform27") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform28") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform29") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform30") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform31") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform32") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform33") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform34") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform35") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform36") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform37") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform38") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform39") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform40") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform41") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform42") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 51)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform43") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform44") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 53)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform45") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform46") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 55)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform47") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform48") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 57)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform49") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform50") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 59)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform51") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform52") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 61)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform53") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform54") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 63)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform55") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform56") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 65)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform57") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform58") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 67)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform59") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform60") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 69)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform61") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform62") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 71)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform63") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform64") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 73)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform65") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform66") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 75)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform67") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform68") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 77)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform69") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform70") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 79)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform71") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform72") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 81)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform73") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform74") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 83)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform75") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform76") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 85)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform77") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform78") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 87)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform79") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform80") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 89)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform81") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform82") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 91)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform83") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform84") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 93)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform85") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform86") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 95)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform87") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform88") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 97)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform89") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform90") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3001 99)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform91") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform92") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform93") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform94") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform95") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform96") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform97") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform98") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform99") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform100") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform101") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform102") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform103") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform104") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform105") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform106") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform107") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform108") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform109") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform110") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform111") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform112") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform113") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform114") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform115") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform116") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform117") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform118") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform119") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform120") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform121") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform122") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform123") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform124") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform125") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform126") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform127") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform128") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform129") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform130") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform131") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform132") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform133") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform134") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform135") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform136") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform137") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform138") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform139") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform140") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform141") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform142") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 51)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform143") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform144") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 53)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform145") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform146") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 55)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform147") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform148") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 57)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform149") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform150") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 59)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform151") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform152") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 61)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform153") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform154") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 63)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform155") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform156") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 65)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform157") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform158") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 67)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform159") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform160") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 69)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform161") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform162") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 71)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform163") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform164") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 73)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform165") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform166") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 75)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform167") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform168") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 77)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform169") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform170") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 79)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform171") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform172") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 81)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform173") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform174") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 83)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform175") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform176") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 85)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform177") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform178") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 87)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform179") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform180") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 89)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform181") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform182") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 91)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform183") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform184") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 93)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform185") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform186") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 95)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform187") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform188") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 97)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform189") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform190") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3101 99)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform191") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform192") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform193") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform194") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform195") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform196") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform197") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform198") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform199") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform200") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform201") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform202") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform203") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform204") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform205") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform206") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform207") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform208") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform209") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform210") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform211") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform212") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform213") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform214") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform215") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform216") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform217") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform218") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform219") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform220") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform221") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform222") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform223") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform224") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform225") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform226") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform227") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform228") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform229") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform230") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform231") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform232") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform233") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform234") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform235") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform236") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform237") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform238") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform239") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform240") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform241") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform242") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 51)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform243") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform244") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 53)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform245") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform246") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 55)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform247") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform248") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 57)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform249") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform250") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 59)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform251") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform252") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 61)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform253") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform254") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 63)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform255") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform256") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 65)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform257") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform258") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 67)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform259") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform260") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 69)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform261") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform262") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 71)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform263") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform264") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 73)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform265") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform266") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 75)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform267") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform268") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 77)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform269") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform270") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 79)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform271") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform272") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 81)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform273") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform274") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 83)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform275") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform276") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 85)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform277") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform278") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 87)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform279") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform280") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 89)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform281") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform282") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 91)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform283") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform284") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 93)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform285") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform286") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 95)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform287") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform288") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 97)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform289") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform290") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3201 99)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform291") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform292") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform293") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform294") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform295") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform296") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform297") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform298") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform299") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform300") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform301") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform302") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform303") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform304") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform305") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform306") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform307") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform308") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform309") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform310") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform311") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform312") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform313") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform314") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform315") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform316") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform317") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform318") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform319") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform320") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform321") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform322") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform323") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform324") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform325") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform326") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform327") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform328") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform329") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform330") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform331") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform332") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform333") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform334") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform335") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform336") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform337") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform338") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform339") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform340") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform341") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform342") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 51)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform343") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform344") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 53)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform345") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform346") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 55)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform347") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform348") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 57)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform349") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform350") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 59)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform351") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform352") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 61)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform353") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform354") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 63)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform355") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform356") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 65)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform357") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform358") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 67)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform359") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform360") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 69)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform361") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform362") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 71)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform363") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform364") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 73)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform365") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform366") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 75)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform367") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform368") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 77)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform369") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform370") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 79)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform371") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform372") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 81)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform373") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform374") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 83)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform375") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform376") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 85)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform377") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform378") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 87)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform379") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform380") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 89)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform381") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform382") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 91)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform383") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform384") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 93)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform385") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform386") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 95)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform387") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform388") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 97)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform389") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform390") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3301 99)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform391") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform392") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform393") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform394") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform395") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform396") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform397") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform398") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform399") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform400") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform401") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform402") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 11)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform403") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 12)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform404") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 13)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform405") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 14)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform406") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 15)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform407") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 16)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform408") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 17)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform409") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 18)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform410") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 19)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform411") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 20)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform412") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 21)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform413") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 22)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform414") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 23)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform415") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 24)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform416") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 25)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform417") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 26)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform418") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 27)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform419") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 28)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform420") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 29)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform421") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 30)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform422") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 31)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform423") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 32)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform424") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 33)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform425") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 34)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform426") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 35)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform427") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 36)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform428") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 37)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform429") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 38)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform430") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 39)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform431") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 40)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform432") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 41)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform433") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 42)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform434") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 43)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform435") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 44)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform436") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 45)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform437") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 46)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform438") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 47)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform439") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 48)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform440") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 49)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform441") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 50)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform442") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 51)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform443") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 52)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform444") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 53)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform445") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 54)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform446") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 55)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform447") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 56)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform448") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 57)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform449") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 58)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform450") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 59)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform451") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 60)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform452") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 61)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform453") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 62)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform454") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 63)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform455") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 64)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform456") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 65)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform457") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 66)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform458") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 67)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform459") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 68)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform460") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 69)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform461") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 70)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform462") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 71)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform463") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 72)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform464") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 73)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform465") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 74)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform466") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 75)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform467") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 76)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform468") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 77)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform469") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 78)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform470") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 79)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform471") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 80)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform472") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 81)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform473") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 82)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform474") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 83)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform475") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 84)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform476") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 85)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform477") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 86)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform478") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 87)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform479") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 88)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform480") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 89)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform481") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 90)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform482") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 91)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform483") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 92)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform484") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 93)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform485") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 94)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform486") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 95)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform487") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 96)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform488") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 97)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform489") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 98)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform490") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3401 99)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform491") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform492") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 1)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform493") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 2)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform494") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 3)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform495") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 4)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform496") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 5)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform497") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 6)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform498") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 7)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform499") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 8)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform500") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 9)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform501") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 10)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P)$(R)Waveform502") {
	field(DESC, "Digitizer waveform")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3501 11)")
	field(DTYP, "asynInt32")
}
record (mbbo,"$(P)$(R)StateSet") {
	field(DESC, "Set value for the target state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	info(archive,"policy:Default")
	field(PINI, "YES")
	field(OUT, "@asyn(write1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bo,"$(P)$(R)Reset") {
	field(DESC, "Toggle 1 to reset modulator interlocks")
	field(ZNAM, "RESET")
	field(ONAM, "RESETTING")
	field(HIGH, "1")
	info(archive,"policy:Default")
	field(PINI, "YES")
	field(OUT, "@asynMask(write2 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (ao,"$(P)$(R)VoltageSet") {
	field(DESC, "Set voltage for capacitor charging ps")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(DRVH, "980")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write100)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)FilamentCurrentSet") {
	field(DESC, "Set val for filament current")
	field(EGU, "A")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(DRVH, "28")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write200)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)PulseWidthSet") {
	field(DESC, "Pulse width set for all Sus, range 1-5us")
	field(EGU, "us")
	field(HIHI, "4.5")
	field(HHSV, "MAJOR")
	field(LOLO, "1")
	field(LLSV, "MAJOR")
	field(DRVH, "4.5")
	field(DRVL, "1")
	field(PINI, "YES")
	field(OUT, "@asyn(write300)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)PulseRepFreqSet") {
	field(DESC, "Local pulse repetition frequency setval")
	field(EGU, "Hz")
	field(HIHI, "10")
	field(HHSV, "MAJOR")
	field(PINI, "YES")
	field(OUT, "@asyn(write400)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)SolenoidPS1CurrentSet") {
	field(DESC, "Current set for solenoid power supply 1")
	field(EGU, "A")
	field(HIHI, "41.5")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "41")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	field(DRVH, "41")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write500)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)SolenoidPS2CurrentSet") {
	field(DESC, "Current set for solenoid power supply 2")
	field(EGU, "A")
	field(HIHI, "24")
	field(HHSV, "MAJOR")
	field(LOLO, "20")
	field(LLSV, "MAJOR")
	field(HIGH, "23")
	field(HSV, "MINOR")
	field(LOW, "21")
	field(LSV, "MINOR")
	field(DRVH, "23.3")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write502)")
	field(DTYP, "asynFloat64")
}
record (ao,"$(P)$(R)SolenoidPS3CurrentSet") {
	field(DESC, "Current set for solenoid power supply 3")
	field(EGU, "A")
	field(HIHI, "36")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "35")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	field(DRVH, "35")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write504)")
	field(DTYP, "asynFloat64")
}
record (longout,"$(P)$(R)WaveformTypeSet") {
	field(DESC, "Requested waveform type set value")
	field(HIHI, "40")
	field(HHSV, "MAJOR")
	field(LOLO, "-1")
	field(LLSV, "MAJOR")
	field(PINI, "YES")
	field(OUT, "@asyn(write3000)")
	field(DTYP, "asynInt32")
}
