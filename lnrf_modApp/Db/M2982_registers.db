record (mbbi,"$(P):State") {
	field(DESC, "Current state of modulator")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP,  "@asyn(read3 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bi,"$(P):StandByStateIntlk") {
	field(DESC, "Interlock exists in the StandBy state")
	field(INP,  "@asynMask(read4 0 0x01 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):HVStateIntlk") {
	field(DESC, "Interlock exists in the HV state")
	field(INP,  "@asynMask(read4 0 0x02 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):TrigStateIntlk") {
	field(DESC, "Interlock exists in the trigger state")
	field(INP,  "@asynMask(read4 0 0x04 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):WarningExists") {
	field(DESC, "Warning bit is high on a modulator state")
	field(INP,  "@asynMask(read4 0 0x08 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "WARNING")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MINOR")
}
record (bi,"$(P):OutsideLimitsIntlk") {
	field(DESC, "Outside limits")
	field(INP,  "@asynMask(read4 0 0x10 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):ErrorExists") {
	field(DESC, "Error exists")
	field(INP,  "@asynMask(read4 0 0x20 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (mbbi,"$(P):AccessLevel") {
	field(DESC, "Access level of modulator. Remote/local")
	field(INP, "@asyn(read5 0)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(ZRSV, "NO_ALARM")
	field(ONSV, "MINOR")
	field(TWSV, "MINOR")
	field(THSV, "MAJOR")
	field(ZRVL, "0")
	field(ZRST, "Remote")
	field(ONVL, "1")
	field(ONST, "Operator")
	field(TWVL, "2")
	field(TWST, "Admin")
	field(THVL, "3")
	field(THST, "ScandiNova")
}
record (ai,"$(P):FilamentWarmupTimeLeft") {
	field(DESC, "Remaining time on filament warm up timer")
	field(EGU, "s")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read6 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):PulseRepetitionFreq") {
	field(DESC, "Pulse repetition frequency read value")
	field(EGU, "Hz")
	field(HIHI, "10.5")
	field(HHSV, "MAJOR")
	field(HIGH, "10.1")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read8 0)")
	field(DTYP, "asynFloat64")
}
record (mbbi,"$(P):TargetStateRBV") {
	field(DESC, "Readback of target modulator state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read20 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (ai,"$(P):VoltageSet:RBV") {
	field(DESC, "Readback of voltage setvalue of all ccps")
	field(EGU, "V")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read21 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):VoltagePS1") {
	field(DESC, "Capacitor charging power supply voltage")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read100 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):VoltagePS2") {
	field(DESC, "Capacitor charging power supply voltage")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read102 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):FilamentCurrent") {
	field(DESC, "Filament power supply current")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read200 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "A")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "27.5")
	field(HSV, "MINOR")
	field(LOW, "22.5")
	field(LSV, "MINOR")
}
record (ai,"$(P):FilamentVoltage") {
	field(DESC, "Filament power supply voltage")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read202 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "V")
	field(HIHI, "32")
	field(HHSV, "MAJOR")
	field(HIGH, "30")
	field(HSV, "MINOR")
}
record (ai,"$(P):IonPumpCurrent") {
	field(DESC, "Ion pump controller 1 current")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read300 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "nA")
	field(HIHI, "100")
	field(HHSV, "MAJOR")
	field(HIGH, "10")
	field(HSV, "MINOR")
}
record (ai,"$(P):IonPumpVoltage") {
	field(DESC, "Ion pump controller 1 voltage")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read302 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "kV")
	field(HIHI, "5.5")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "5")
	field(HSV, "MINOR")
	field(LOW, "4")
	field(LSV, "MINOR")
}
record (ai,"$(P):IonPumpPressure") {
	field(DESC, "Ion pump controller 1 pressure")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read304 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "Pa")
#	field(HIHI, "5.5")
#	field(HHSV, "MAJOR")
#	field(LOLO, "0")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5")
#	field(HSV, "MINOR")
#	field(LOW, "4")
#	field(LSV, "MINOR")
}
record (ai,"$(P):SolenoidPS1Current") {
	field(DESC, "Solenoid power supply 1 current")
	field(EGU, "A")
	field(HIHI, "41.5")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "41")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read400 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):SolenoidPS1Voltage") {
	field(DESC, "Solenoid power supply 1 voltage")
	field(EGU, "V")
	field(HIHI, "60.7")
	field(HHSV, "MAJOR")
	field(LOLO, "50")
	field(LLSV, "MAJOR")
	field(HIGH, "60")
	field(HSV, "MINOR")
	field(LOW, "53.5")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read402 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CurrentTransformer") {
	field(DESC, "Pulse current amplitude")
	field(EGU, "A")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "250")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read500 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CapVoltageDivider") {
	field(DESC, "Pulse voltage amplitude")
	field(EGU, "kV")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "240")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read502 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):PulseWidth") {
	field(DESC, "Pulse width at 50% height current pulse")
	field(EGU, "us")
	field(HIHI, "4.7")
	field(HHSV, "MAJOR")
	field(HIGH, "4.5")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read504 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):AveragePower") {
	field(DESC, "Scaled read value of the average power"")
	field(EGU, "kW")
#	field(HIHI, "4.7")
#	field(HHSV, "MAJOR")
#	field(HIGH, "4.5")
#	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read506 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OilTemp") {
	field(DESC, "Oil temperature")
	field(EGU, "C")
	field(HIHI, "56")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "53")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read600 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OilLevel") {
	field(DESC, "Oil level")
	field(EGU, "mm")
	field(HIHI, "-5")
	field(HHSV, "MAJOR")
	field(LOLO, "-40")
	field(LLSV, "MAJOR")
	field(HIGH, "-10")
	field(HSV, "MINOR")
	field(LOW, "-25")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read602 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):InletWaterTemp") {
	field(DESC, "Inlet water temperature")
	field(EGU, "C")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read700 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CollectorReturnTemp") {
	field(DESC, "Collector return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read702 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):BodyReturnTemp") {
	field(DESC, "Body return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read704 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):SolATemp") {
	field(DESC, "Sol A temperature")
	field(EGU, "C")
#	field(HIHI, "29")
#	field(HHSV, "MAJOR")
#	field(LOLO, "15")
#	field(LLSV, "MAJOR")
#	field(HIGH, "27")
#	field(HSV, "MINOR")
#	field(LOW, "16")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read706 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow1") {
	field(DESC, "Capacitor charging ps water flow 1")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read800 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow2") {
	field(DESC, "Capacitor charging ps water flow 2")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read802 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow3") {
	field(DESC, "Capacitor charging ps water flow 3")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read804 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow4") {
	field(DESC, "Capacitor charging ps water flow 4")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read806 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow5") {
	field(DESC, "Capacitor charging ps water flow 5")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read808 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow6") {
	field(DESC, "Capacitor charging ps water flow 6")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read810 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CollectorPowerLoss") {
	field(DESC, "Power loss dissipated into cooling water")
	field(EGU, "kW")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read852 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):ForwardPower") {
	field(DESC, "RF out forward power")
	field(EGU, "dBm")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read920 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):ReflectedPower") {
	field(DESC, "RF out reflected power")
	field(EGU, "dBm")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read922 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):StandingWaveRatio") {
	field(DESC, "Voltage standing wave ratio")
	field(EGU, "")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read924 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OutPulseWidth") {
	field(DESC, "RF out pulse width")
	field(EGU, "us")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read926 0)")
	field(DTYP, "asynFloat64")
}
record (longin,"$(P):EventIndex") {
	field(DESC, "Modulo 50 of Index to event log arrays")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read999 0)")
	field(DTYP, "asynInt32")
}
record (longin,"$(P):WaveformType") {
	field(DESC, "Waveform type requested, 99 if error")
	field(HIHI, "140")
	field(HHSV, "MAJOR")
	field(LOLO, "99")
	field(LLSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3000 0)")
	field(DTYP, "asynInt32")
}
record (mbbo,"$(P):StateSet") {
	field(DESC, "Set value for the target state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(PINI, "YES")
	field(OUT, "@asyn(write1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bo,"$(P):Reset") {
	field(DESC, "Toggle 1 to reset modulator interlocks")
	field(ZNAM, "RESET")
	field(ONAM, "RESETTING")
	field(HIGH, "1")
	field(PINI, "YES")
	field(OUT, "@asynMask(write2 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bo,"$(P):HardReset") {
	field(DESC, "Hard reset modulator interlocks")
	field(ZNAM, "HARD RESET")
	field(ONAM, "HARD RESETTING")
	field(HIGH, "1")
	field(PINI, "YES")
	field(OUT, "@asynMask(write2 0 0x04 500)")
	field(DTYP, "asynUInt32Digital")
}
record (ao,"$(P):VoltageSet") {
	field(DESC, "Set voltage for capacitor charging ps")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(DRVH, "980")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write100)")
	field(DTYP, "asynFloat64")
}
