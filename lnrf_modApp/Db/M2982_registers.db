record (mbbi,"$(P):State") {
	field(DESC, "Current state of modulator")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP,  "@asyn(read3 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bi,"$(P):StandByStateIntlk") {
	field(DESC, "Interlock exists in the StandBy state")
	field(INP,  "@asynMask(read4 0 0x01 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):HVStateIntlk") {
	field(DESC, "Interlock exists in the HV state")
	field(INP,  "@asynMask(read4 0 0x02 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):TrigStateIntlk") {
	field(DESC, "Interlock exists in the trigger state")
	field(INP,  "@asynMask(read4 0 0x04 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):WarningExists") {
	field(DESC, "Warning bit is high on a modulator state")
	field(INP,  "@asynMask(read4 0 0x08 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "WARNING")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MINOR")
}
record (bi,"$(P):OutsideLimitsIntlk") {
	field(DESC, "Outside limits")
	field(INP,  "@asynMask(read4 0 0x10 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (bi,"$(P):ErrorExists") {
	field(DESC, "Error exists")
	field(INP,  "@asynMask(read4 0 0x20 500)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(ZNAM, "OK")
	field(ONAM, "FAULT")
	field(ZSV,  "NO_ALARM")
	field(OSV,  "MAJOR")
}
record (mbbi,"$(P):AccessLevel") {
	field(DESC, "Access level of modulator. Remote/local")
	field(INP, "@asyn(read5 0)")
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(ZRSV, "NO_ALARM")
	field(ONSV, "MINOR")
	field(TWSV, "MINOR")
	field(THSV, "MAJOR")
	field(ZRVL, "0")
	field(ZRST, "Remote")
	field(ONVL, "1")
	field(ONST, "Operator")
	field(TWVL, "2")
	field(TWST, "Admin")
	field(THVL, "3")
	field(THST, "ScandiNova")
}
record (ai,"$(P):FilamentWarmupTimeLeft") {
	field(DESC, "Remaining time on filament warm up timer")
	field(EGU, "s")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read6 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):PulseRepetitionFreq") {
	field(DESC, "Pulse repetition frequency read value")
	field(EGU, "Hz")
	field(HIHI, "10.5")
	field(HHSV, "MAJOR")
	field(HIGH, "10.1")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read8 0)")
	field(DTYP, "asynFloat64")
}
record (mbbi,"$(P):TargetStateRBV") {
	field(DESC, "Readback of target modulator state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read20 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (ai,"$(P):VoltageSet:RBV") {
	field(DESC, "Readback of voltage setvalue of all ccps")
	field(EGU, "V")
	info(archive,"policy:Default")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read21 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):VoltagePS1") {
	field(DESC, "Capacitor charging power supply voltage")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read100 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):VoltagePS2") {
	field(DESC, "Capacitor charging power supply voltage")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read102 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):FilamentCurrent") {
	field(DESC, "Filament power supply current")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read200 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "A")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "27.5")
	field(HSV, "MINOR")
	field(LOW, "22.5")
	field(LSV, "MINOR")
}
record (ai,"$(P):FilamentVoltage") {
	field(DESC, "Filament power supply voltage")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read202 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "V")
	field(HIHI, "32")
	field(HHSV, "MAJOR")
	field(HIGH, "30")
	field(HSV, "MINOR")
}
record (ai,"$(P):IonPumpCurrent") {
	field(DESC, "Ion pump controller 1 current")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read300 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "nA")
	field(HIHI, "100")
	field(HHSV, "MAJOR")
	field(HIGH, "10")
	field(HSV, "MINOR")
}
record (ai,"$(P):IonPumpVoltage") {
	field(DESC, "Ion pump controller 1 voltage")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read302 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "kV")
	field(HIHI, "5.5")
	field(HHSV, "MAJOR")
	field(LOLO, "0")
	field(LLSV, "MAJOR")
	field(HIGH, "5")
	field(HSV, "MINOR")
	field(LOW, "4")
	field(LSV, "MINOR")
}
record (ai,"$(P):IonPumpPressure") {
	field(DESC, "Ion pump controller 1 pressure")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read304 0)")
	field(DTYP, "asynFloat64")
	field(EGU, "Pa")
#	field(HIHI, "5.5")
#	field(HHSV, "MAJOR")
#	field(LOLO, "0")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5")
#	field(HSV, "MINOR")
#	field(LOW, "4")
#	field(LSV, "MINOR")
}
record (ai,"$(P):SolenoidPS1Current") {
	field(DESC, "Solenoid power supply 1 current")
	field(EGU, "A")
	field(HIHI, "41.5")
	field(HHSV, "MAJOR")
	field(LOLO, "30")
	field(LLSV, "MAJOR")
	field(HIGH, "41")
	field(HSV, "MINOR")
	field(LOW, "31")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read400 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):SolenoidPS1Voltage") {
	field(DESC, "Solenoid power supply 1 voltage")
	field(EGU, "V")
	field(HIHI, "60.7")
	field(HHSV, "MAJOR")
	field(LOLO, "50")
	field(LLSV, "MAJOR")
	field(HIGH, "60")
	field(HSV, "MINOR")
	field(LOW, "53.5")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read402 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CurrentTransformer") {
	field(DESC, "Pulse current amplitude")
	field(EGU, "A")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "250")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read500 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CapVoltageDivider") {
	field(DESC, "Pulse voltage amplitude")
	field(EGU, "kV")
	field(HIHI, "265")
	field(HHSV, "MAJOR")
	field(HIGH, "240")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read502 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):PulseWidth") {
	field(DESC, "Pulse width at 50% height current pulse")
	field(EGU, "us")
	field(HIHI, "4.7")
	field(HHSV, "MAJOR")
	field(HIGH, "4.5")
	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read504 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):AveragePower") {
	field(DESC, "Scaled read value of the average power"")
	field(EGU, "kW")
#	field(HIHI, "4.7")
#	field(HHSV, "MAJOR")
#	field(HIGH, "4.5")
#	field(HSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read506 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OilTemp") {
	field(DESC, "Oil temperature")
	field(EGU, "C")
	field(HIHI, "56")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "53")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read600 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OilLevel") {
	field(DESC, "Oil level")
	field(EGU, "mm")
	field(HIHI, "-5")
	field(HHSV, "MAJOR")
	field(LOLO, "-40")
	field(LLSV, "MAJOR")
	field(HIGH, "-10")
	field(HSV, "MINOR")
	field(LOW, "-25")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read602 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):InletWaterTemp") {
	field(DESC, "Inlet water temperature")
	field(EGU, "C")
	field(HIHI, "28")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read700 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CollectorReturnTemp") {
	field(DESC, "Collector return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read702 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):BodyReturnTemp") {
	field(DESC, "Body return temperature")
	field(EGU, "C")
	field(HIHI, "29")
	field(HHSV, "MAJOR")
	field(LOLO, "15")
	field(LLSV, "MAJOR")
	field(HIGH, "27")
	field(HSV, "MINOR")
	field(LOW, "16")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read704 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):SolATemp") {
	field(DESC, "Sol A temperature")
	field(EGU, "C")
#	field(HIHI, "29")
#	field(HHSV, "MAJOR")
#	field(LOLO, "15")
#	field(LLSV, "MAJOR")
#	field(HIGH, "27")
#	field(HSV, "MINOR")
#	field(LOW, "16")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read706 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow1") {
	field(DESC, "Capacitor charging ps water flow 1")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read800 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow2") {
	field(DESC, "Capacitor charging ps water flow 2")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read802 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow3") {
	field(DESC, "Capacitor charging ps water flow 3")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read804 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow4") {
	field(DESC, "Capacitor charging ps water flow 4")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read806 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow5") {
	field(DESC, "Capacitor charging ps water flow 5")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read808 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CCPSWaterFlow6") {
	field(DESC, "Capacitor charging ps water flow 6")
	field(EGU, "l/m")
	field(HIHI, "5.9")
	field(HHSV, "MAJOR")
	field(LOLO, "4.5")
	field(LLSV, "MAJOR")
	field(HIGH, "5.6")
	field(HSV, "MINOR")
	field(LOW, "5.1")
	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read810 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):CollectorPowerLoss") {
	field(DESC, "Power loss dissipated into cooling water")
	field(EGU, "kW")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read852 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):ForwardPower") {
	field(DESC, "RF out forward power")
	field(EGU, "dBm")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read920 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):ReflectedPower") {
	field(DESC, "RF out reflected power")
	field(EGU, "dBm")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read922 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):StandingWaveRatio") {
	field(DESC, "Voltage standing wave ratio")
	field(EGU, "")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read924 0)")
	field(DTYP, "asynFloat64")
}
record (ai,"$(P):OutPulseWidth") {
	field(DESC, "RF out pulse width")
	field(EGU, "us")
#	field(HIHI, "5.9")
#	field(HHSV, "MAJOR")
#	field(LOLO, "4.5")
#	field(LLSV, "MAJOR")
#	field(HIGH, "5.6")
#	field(HSV, "MINOR")
#	field(LOW, "5.1")
#	field(LSV, "MINOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read926 0)")
	field(DTYP, "asynFloat64")
}
record (longin,"$(P):EventIndex") {
	field(DESC, "Modulo 50 of Index to event log arrays")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read999 0)")
	field(DTYP, "asynInt32")
}
record (mbbi,"$(P):OilPumpCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BpsVoltSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):MainsOnCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):VoltSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FpsCurrSet1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps1CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps2CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps3CurrSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FanOnCmd:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 13)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HeaterDelay1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):PlswthSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):LocPrfSet:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):PrfRead:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FiberIntSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwCtrlExtIntlkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwCtrlTrigEnableSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HvEnaSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):ExternalIntlk1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):ExternalIntlk2:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Spare3:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Spare4:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):TmaxSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ps1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ps1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ps1SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 41)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BleederSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 66)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su1SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 69)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su2SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 70)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su3SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 71)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su4SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 72)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su5SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 73)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su6SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 74)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su7SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 75)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Su8SumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 76)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BiasPsOkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 89)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiCtHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 94)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiCtLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 95)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiCvdHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 96)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiCvdLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 97)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiFwhmHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 98)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiFwhmLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2000 99)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):DigiSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilLevHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilLevLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 2)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 3)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilFilterSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilPumpInverterSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 7)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):OilPumpTempSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FpsCurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FpsCurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FpsVoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 11)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FpsVoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps1CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 14)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps1CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 15)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 16)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 17)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps2CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 18)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps2CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 19)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps2VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 20)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps2VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 21)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps3CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 22)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps3CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 23)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps3VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 24)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Sps3VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 25)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):SolPsSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 26)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwHvSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 27)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwStbSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 28)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ipc1CurrHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 29)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ipc1CurrLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ipc1VoltHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ipc1VoltLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 32)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):Ipc1VacOkSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):InletWaterTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 84)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):InletWaterTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 85)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):ColRtnTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 86)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):ColRtnTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 87)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BodyRtnTempHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 88)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BodyRtnTempLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 89)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwHvSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 98)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):HwStbSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2100 99)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):SolTempSwitchSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 0)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):FluidTrapSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):CcpsSuFlow1:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 4)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):CcpsSuFlow2:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 5)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):CcpsSuFlow3:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 6)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BodWinFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 8)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):CollectorFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 9)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):SolenoidFlow:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 10)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RfaSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 12)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFDrivePowerRead:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 13)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):CollectorPower:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 30)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):BodyPower:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 31)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFFwdHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 33)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFFwdLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 34)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFRflHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 35)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFRflLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 36)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFPulseLenHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 37)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFPulseLenLlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 38)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFDigiSumSts:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 39)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):RFVSWRHlim:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 40)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):GUIWatchdog:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 52)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):IntComm:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 54)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (mbbi,"$(P):ExtComm:IntlkState") {
	field(DESC, "State of mod where interlock is enabled")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read2200 55)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
record (bi,"$(P):TrigEnableCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):TrigEnableCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 2 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 2 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BpsVoltSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 3 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BpsVoltSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 3 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):MainsOnCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):MainsOnCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):VoltSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 5 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):VoltSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 5 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrSet1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 7 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrSet1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 7 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FanOnCmd:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 13 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FanOnCmd:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 13 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HeaterDelay1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 14 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HeaterDelay1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 14 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):PlswthSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 16 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):PlswthSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 16 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):LocPrfSet:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 17 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):LocPrfSet:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 17 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):PrfRead:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 23 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):PrfRead:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 23 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FiberIntSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 24 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FiberIntSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 24 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwCtrlExtIntlkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 25 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwCtrlExtIntlkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 25 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwCtrlTrigEnableSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 26 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwCtrlTrigEnableSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 26 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HvEnaSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 27 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HvEnaSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 27 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExternalIntlk1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 28 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExternalIntlk1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 28 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExternalIntlk2:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 29 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExternalIntlk2:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 29 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Spare3:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Spare3:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Spare4:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Spare4:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):TmaxSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 35 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):TmaxSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 35 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 39 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 39 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 40 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 40 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 41 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ps1SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 41 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BleederSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 66 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BleederSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 66 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su1SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 69 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su1SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 69 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su2SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 70 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su2SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 70 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su3SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 71 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su3SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 71 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su4SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 72 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su4SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 72 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su5SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 73 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su5SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 73 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su6SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 74 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su6SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 74 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su7SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 75 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su7SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 75 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su8SumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 76 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Su8SumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 76 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BiasPsOkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 89 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BiasPsOkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 89 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCtHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 94 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCtHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 94 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCtLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 95 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCtLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 95 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCvdHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 96 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCvdHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 96 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCvdLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 97 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiCvdLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 97 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiFwhmHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 98 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiFwhmHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 98 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiFwhmLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 99 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiFwhmLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2300 99 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):DigiSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilLevHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilLevHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilLevLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 2 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilLevLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 2 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 3 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 3 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilFilterSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 6 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilFilterSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 6 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpInverterSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 7 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpInverterSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 7 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpTempSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):OilPumpTempSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsCurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsVoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 11 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsVoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 11 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsVoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 12 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FpsVoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 12 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 14 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 14 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 15 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 15 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 16 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 16 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 17 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 17 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 18 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 18 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 19 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 19 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 20 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 20 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 21 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps2VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 21 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 22 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 22 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 23 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 23 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 24 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 24 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 25 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Sps3VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 25 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolPsSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 26 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolPsSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 26 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwHvSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 27 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwHvSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 27 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwStbSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 28 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwStbSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 28 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1CurrHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 29 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1CurrHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 29 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1CurrLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1CurrLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VoltHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VoltHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VoltLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 32 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VoltLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 32 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VacOkSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 33 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):Ipc1VacOkSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 33 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):InletWaterTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 84 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):InletWaterTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 84 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):InletWaterTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 85 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):InletWaterTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 85 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ColRtnTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 86 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ColRtnTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 86 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ColRtnTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 87 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ColRtnTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 87 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyRtnTempHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 88 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyRtnTempHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 88 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyRtnTempLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 89 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyRtnTempLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 89 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwHvSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 98 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwHvSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 98 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwStbSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 99 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):HwStbSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2400 99 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolTempSwitchSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolTempSwitchSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 0 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FluidTrapSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 1 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):FluidTrapSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 1 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow1:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 4 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow1:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 4 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow2:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 5 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow2:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 5 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow3:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 6 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CcpsSuFlow3:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 6 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodWinFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 8 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodWinFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 8 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CollectorFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 9 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CollectorFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 9 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolenoidFlow:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 10 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):SolenoidFlow:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 10 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RfaSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 12 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RfaSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 12 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFDrivePowerRead:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 13 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFDrivePowerRead:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 13 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CollectorPower:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 30 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):CollectorPower:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 30 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyPower:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 31 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):BodyPower:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 31 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFFwdHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 33 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFFwdHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 33 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFFwdLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 34 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFFwdLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 34 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFRflHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 35 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFRflHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 35 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFRflLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 36 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFRflLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 36 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFPulseLenHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 37 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFPulseLenHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 37 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFPulseLenLlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 38 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFPulseLenLlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 38 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFDigiSumSts:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 39 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFDigiSumSts:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 39 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFVSWRHlim:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 40 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):RFVSWRHlim:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 40 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):GUIWatchdog:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 52 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):GUIWatchdog:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 52 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):IntComm:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 54 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):IntComm:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 54 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExtComm:WarningON") {
	field(DESC, "ON if warning limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 55 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (bi,"$(P):ExtComm:IntlkON") {
	field(DESC, "ON if interlock limit has been reached")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask(read2500 55 0x02 500)")
	field(DTYP, "asynUInt32Digital")
}
record (longin,"$(P):WaveformType") {
	field(DESC, "Waveform type requested, 99 if error")
	field(HIHI, "140")
	field(HHSV, "MAJOR")
	field(LOLO, "99")
	field(LLSV, "MAJOR")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn(read3000 0)")
	field(DTYP, "asynInt32")
}
record (mbbo,"$(P):StateSet") {
	field(DESC, "Set value for the target state")
	field(UNSV, "MAJOR")
	field(ZRSV, "MAJOR")
	field(PINI, "YES")
	field(OUT, "@asyn(write1)")
	field(DTYP, "asynInt32")
	field(ZRVL, "-1")
	field(ZRST, "Error")
	field(ONVL, "0")
	field(ONST, "Initialize")
	field(TWVL, "1")
	field(TWST, "Off")
	field(THVL, "2")
	field(THST, "StandByInterlock")
	field(FRVL, "3")
	field(FRST, "StandByOffRequested")
	field(FVVL, "4")
	field(FVST, "StandByOnRequested")
	field(SXVL, "5")
	field(SXST, "StandBy")
	field(SVVL, "6")
	field(SVST, "HvInterlock")
	field(EIVL, "7")
	field(EIST, "HvOffRequested")
	field(NIVL, "8")
	field(NIST, "HvOnRequested")
	field(TEVL, "9")
	field(TEST, "Hv")
	field(ELVL, "10")
	field(ELST, "TrigInterlock")
	field(TVVL, "11")
	field(TVST, "TrigOffRequested")
	field(TTVL, "12")
	field(TTST, "TrigOnRequested")
	field(FTVL, "13")
	field(FTST, "Trig")
	field(FFVL, "99")
	field(FFST, "Disabled")
}
# TODO hard reset, bit 2
record (bo,"$(P):Reset") {
	field(DESC, "Toggle 1 to reset modulator interlocks")
	field(ZNAM, "RESET")
	field(ONAM, "RESETTING")
	field(HIGH, "1")
	field(PINI, "YES")
	field(OUT, "@asynMask(write2 0 0x01 500)")
	field(DTYP, "asynUInt32Digital")
}
record (ao,"$(P):VoltageSet") {
	field(DESC, "Set voltage for capacitor charging ps")
	field(EGU, "V")
	field(HIHI, "1000")
	field(HHSV, "MAJOR")
	field(HIGH, "980")
	field(HSV, "MINOR")
	field(DRVH, "980")
	field(DRVL, "0")
	field(PINI, "YES")
	field(OUT, "@asyn(write100)")
	field(DTYP, "asynFloat64")
}
record (longout,"$(P):WaveformTypeSet") {
	field(DESC, "Requested waveform type set value")
	field(HIHI, "40")
	field(HHSV, "MAJOR")
	field(LOLO, "-1")
	field(LLSV, "MAJOR")
	field(PINI, "YES")
	field(OUT, "@asyn(write3000)")
	field(DTYP, "asynInt32")
}
